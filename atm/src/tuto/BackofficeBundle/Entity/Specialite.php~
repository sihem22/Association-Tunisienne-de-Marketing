<?php

namespace tuto\BackofficeBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Specialite
 *
 * @ORM\Table(name="specialite")
 * @ORM\Entity(repositoryClass="tuto\BackofficeBundle\Repository\SpecialiteRepository")
 */
class Specialite
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="libelle", type="string", length=45)
     */
    private $libelle;
    
    /**
     * @ORM\ManyToOne(targetEntity="tuto\BackofficeBundle\Entity\Discipline", inversedBy="Specialite")
     * @ORM\JoinColumn(name="Discipline_id", referencedColumnName="id",onDelete="SET NULL")
     */
    protected $Discipline;


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set libelle
     *
     * @param string $libelle
     * @return Specialite
     */
    public function setLibelle($libelle)
    {
        $this->libelle = $libelle;

        return $this;
    }

    /**
     * Get libelle
     *
     * @return string 
     */
    public function getLibelle()
    {
        return $this->libelle;
    }

    /**
     * Set Discipline
     *
     * @param \tuto\BackofficeBundle\Entity\Discipline $discipline
     * @return Specialite
     */
    public function setDiscipline(\tuto\BackofficeBundle\Entity\Discipline $discipline = null)
    {
        $this->Discipline = $discipline;

        return $this;
    }

    /**
     * Get Discipline
     *
     * @return \tuto\BackofficeBundle\Entity\Discipline 
     */
    public function getDiscipline()
    {
        return $this->Discipline;
    }
     public function __toString() {
        return $this->libelle;
    }
}
