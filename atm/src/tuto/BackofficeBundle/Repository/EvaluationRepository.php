<?php

namespace tuto\BackofficeBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EvaluationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvaluationRepository extends EntityRepository
{
     public function getEvaluationNonLu($user_id) {
        $query = $this->createQueryBuilder("d");
        $query->select('d');
        $query->where('d.etat = 5');
        
        $query->andWhere($query->expr()->notIn('d.id', "SELECT d2.id FROM tuto\BackofficeBundle\Entity\Evaluation d2 INNER JOIN d2.soumission p WHERE p.user = :user"));

        $query->setParameter('user', $user_id);
        return $query->getQuery()->getResult();
    }
    public function getEvaluationLu($user_id) {
        $query = $this->createQueryBuilder("d");
        $query->select('d');
        $query->where('d.etat = 5');
        
        $query->andWhere($query->expr()->notIn('d.id', "SELECT d2.id FROM tuto\BackofficeBundle\Entity\Evaluation d2 INNER JOIN d2.soumission p WHERE p.user = :user"));

        $query->setParameter('user', $user_id);
        return $query->getQuery()->getResult();
    }
    public function findByetat()
	{
		$query = $this->createQueryBuilder('d');
		$query->SELECT ('d') ;
		$query->where('d.etat = 5');
                $query->where('d.vu =1');
		
        return $query->getQuery()->getResult();
	}

	public function count()
	{
		$query = $this->createQueryBuilder('n');
		$query->SELECT ('COUNT(n)');
		$query->where('n.etat = 5');
                 $query->where('n.vu = 1');
        return $query->getQuery()->getSingleScalarResult();
        
	}

}
