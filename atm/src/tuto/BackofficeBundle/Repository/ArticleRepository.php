<?php

namespace tuto\BackofficeBundle\Repository;

/**
 * MembreorgRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository {

    public function findByMotcle($motcle) {
        $mots = explode(',', $motcle);

        $count = count($mots);
        $motcle = array();
        $qb = $this->createQueryBuilder('a')
                ->SELECT('a');

        for ($i = 0; $i < $count; $i++) {
            $motcle = $qb->expr()->like('a.motcle', $qb->expr()->literal($mots[$i]));
        }
        $qb->where($qb->expr()->andX($motcle))
        ->orderBy('a.motcle', 'ASC');
        return $qb->getQuery()->getResult();
    }

    public function findByTitre($motcle) {
        $query = $this->createQueryBuilder('a')
                ->SELECT('a')
                ->where('a.titre like :titre')
                ->setParameter('titre', $motcle)
                ->orderBy('a.titre', 'ASC')
                ->getQuery();
        return $query->getResult();
    }
     public function findByAnnee($motcle) {
   $query = $this->createQueryBuilder("a");
        $query->select('a');
      
        $query->Where($query->expr()->in('a.annee', "SELECT d2.id FROM tuto\BackofficeBundle\Entity\Article d2 INNER JOIN d2.annee p WHERE p.libelle like :annee"));
       

        $query->setParameter('annee', $motcle);
        return $query->getQuery()->getResult();
    }
    
    public function findByType($motcle) {
   $query = $this->createQueryBuilder("a");
        $query->select('a');
      
        $query->Where($query->expr()->in('a.type', "SELECT d2.id FROM tuto\BackofficeBundle\Entity\Article d2 INNER JOIN d2.type p WHERE p.libelle like :type"));
       

        $query->setParameter('type', $motcle);
        return $query->getQuery()->getResult();
    }
}
